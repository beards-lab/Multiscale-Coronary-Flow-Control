function [dxdt, outputs] = dxdt_myocardium(t,x,pars,data,flag)

%% Data input 

% Pressure splines
AoP = data.AoPspl(t); 
PLV = data.PLVspl(t); 
dPLVdt = data.dPLVdtspl(t);

% Intramyocardial pressure (mmHg)
Pim_epi = 1.2 * (1/6) * PLV; 
Pim_mid = 1.2 * (1/2) * PLV; 
Pim_end = 1.2 * (5/6) * PLV;

% Derivative of intramyocardial pressure (mmHg s^{-1))
dPim_epidt = 1.2 * (1/6) * dPLVdt; 
dPim_middt = 1.2 * (1/2) * dPLVdt; 
dPim_enddt = 1.2 * (5/6) * dPLVdt; 

% Right atrial pressure (mmHg)
P_RA = 0; 

%% Parameters 

C_PA   = pars(1); 
L_PA   = pars(2); 
R_PA   = pars(3); 
R_PV   = pars(4); 
C_PV   = pars(5); 
R0m    = pars(6); 
R0_a   = pars(7); 
R0_v   = pars(8); 
V0_a   = pars(9); 
Vc     = pars(10); 
V0_v   = pars(11); 
Ca_epi = pars(12); 
Ca_mid = pars(13); 
Ca_end = pars(14); 
Cv     = pars(15); 
gamma  = pars(16); 
cf_epi = pars(17); 
rf_epi = pars(18);
cf_mid = pars(19); 
rf_mid = pars(20); 

%% State variables 

P_PA = x(1); 
Q_PA = x(2); 
P11  = x(3); 
P21  = x(4); 
P12  = x(5); 
P22  = x(6); 
P13  = x(7); 
P23  = x(8); 
P_PV = x(9); 

%% Auxiliary equations 

Va = max( cf_epi*( (P11 - Pim_epi) * Ca_epi + V0_a), Vc); 
V12 = max( cf_mid*( (P12 - Pim_mid) * Ca_mid + V0_a), Vc); 
V13 = max(     ( (P13 - Pim_end) * Ca_end + V0_a), Vc); 

V21 = cf_epi * ((P21 - Pim_epi) * Cv + V0_v); 
V22 = cf_mid * ((P22 - Pim_mid) * Cv + V0_v); 
V23 =       ((P23 - Pim_end) * Cv + V0_v); 

R11 = rf_epi * R0_a * (V0_a / V11).^2; 
R12 = rf_mid * R0_a * (V0_a / V12).^2; 
R13 =       R0_a * (V0_a / V13).^2; 

R21 = rf_epi * R0_v * (V0_v / V21).^2; 
R22 = rf_mid * R0_v * (V0_v / V22).^2; 
R23 =       R0_v * (V0_v / V23).^2; 

Rm1 = R0m * (gamma * (R11 / R0_a) + (1 - gamma) * (R21 / R0_v)); 
Rm2 = R0m * (gamma * (R12 / R0_a) + (1 - gamma) * (R22 / R0_v)); 
Rm3 = R0m * (gamma * (R13 / R0_a) + (1 - gamma) * (R23 / R0_v)); 

Q11 = (P_PA - P11) / R11; 
Q12 = (P_PA - P12) / R12; 
Q13 = (P_PA - P13) / R13; 

Qm1 = (P11 - P21) / Rm1; 
Qm2 = (P12 - P22) / Rm2; 
Qm3 = (P13 - P23) / Rm3; 

A1 = [(R21+R_PV/2), (R_PV/2), (R_PV/2)];
A2 = [(R_PV/2), (R22+R_PV/2), (R_PV/2)];
A3 = [(R_PV/2), (R_PV/2), (R23+R_PV/2)];

A = [A1;A2;A3];
B = [P21 - P_PV; 
    P22 - P_PV; 
    P23 - P_PV];

X = A\B;

Q21 = double(X(1));
Q22 = double(X(2));
Q23 = double(X(3));

Q21 = max(Q21, 0);
Q22 = max(Q22, 0);
Q23 = max(Q23, 0);

Q_ima = Q11 + Q12 + Q13; 
Q_imv = Q21 + Q22 + Q23; 
Q_out = (P_PV - P_RA) / (R_PV / 2); 

%% Outputs 

dP_PA = (Q_PA - Q_ima) / C_PA; 
dQ_PA = (AoP - P_PA - Q_PA * R_PA) / L_PA; 
dP11  = (Q11 - Qm1) / (cf_epi * Ca_epi) + dPim_epidt; 
dP21  = (Qm1 - Q21) / (cf_epi * Cv) + dPim_epidt; 
dP12  = (Q12 - Qm2) / (cf_mid * Ca_mid) + dPim_middt; 
dP22  = (Qm2 - Q22) / (cf_mid * Cv) + dPim_middt; 
dP13  = (Q13 - Qm3) / (Ca_end) + dPim_enddt; 
dP23  = (Qm3 - Q23) / (Cv) + dPim_enddt;
dP_PV = (Q_imv - Q_out) / C_PV; 

dxdt = [dP_PA; dQ_PA; dP11; dP21; dP12; dP22; dP13; dP23; dP_PV]; 

if flag == 0 
    outputs = []; 
else 
    outputs = [V11; V21; R11; R21; Rm1; Q11; Qm1; 
    V12; V22; R12; R22; Rm2; Q12; Qm2; 
    V13; V23; R13; R23; Rm3; Q13; Qm3; 
    Q21; Q22; Q23; Q_ima; Q_imv; Q_out]; 
end 








